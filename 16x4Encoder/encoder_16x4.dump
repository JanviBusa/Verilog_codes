$date
	Tue Jun 20 19:18:45 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module encoder_16x4_tb $end
$var wire 1 ! v $end
$var wire 4 " out [3:0] $end
$var reg 16 # in [15:0] $end
$scope module en1 $end
$var wire 16 $ in [15:0] $end
$var wire 1 % w8 $end
$var wire 1 & w7 $end
$var wire 1 ' w6 $end
$var wire 1 ( w5 $end
$var wire 1 ) w4 $end
$var wire 1 * w3 $end
$var wire 1 + w2 $end
$var wire 1 , w1 $end
$var wire 1 - v4 $end
$var wire 1 . v3 $end
$var wire 1 / v2 $end
$var wire 1 0 v1 $end
$var wire 1 ! v $end
$var wire 4 1 out [3:0] $end
$scope module e1 $end
$var wire 1 2 in0 $end
$var wire 1 3 in1 $end
$var wire 1 4 in2 $end
$var wire 1 5 in3 $end
$var wire 1 0 v $end
$var wire 1 , y0 $end
$var wire 1 + y1 $end
$upscope $end
$scope module e2 $end
$var wire 1 6 in0 $end
$var wire 1 7 in1 $end
$var wire 1 8 in2 $end
$var wire 1 9 in3 $end
$var wire 1 / v $end
$var wire 1 * y0 $end
$var wire 1 ) y1 $end
$upscope $end
$scope module e3 $end
$var wire 1 : in0 $end
$var wire 1 ; in1 $end
$var wire 1 < in2 $end
$var wire 1 = in3 $end
$var wire 1 . v $end
$var wire 1 ( y0 $end
$var wire 1 ' y1 $end
$upscope $end
$scope module e4 $end
$var wire 1 > in0 $end
$var wire 1 ? in1 $end
$var wire 1 @ in2 $end
$var wire 1 A in3 $end
$var wire 1 - v $end
$var wire 1 & y0 $end
$var wire 1 % y1 $end
$upscope $end
$scope module e5 $end
$var wire 1 0 in0 $end
$var wire 1 / in1 $end
$var wire 1 . in2 $end
$var wire 1 - in3 $end
$var wire 1 ! v $end
$var wire 1 B y0 $end
$var wire 1 C y1 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1C
1B
1A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
b1111 1
00
0/
0.
1-
0,
0+
0*
0)
0(
0'
1&
1%
b1000000000000000 $
b1000000000000000 #
b1111 "
1!
$end
#5
b1110 "
b1110 1
0&
1@
0A
b100000000000000 #
b100000000000000 $
#10
b1101 "
b1101 1
1&
0%
1?
0@
b10000000000000 #
b10000000000000 $
#15
b1100 "
b1100 1
0&
1>
0?
b1000000000000 #
b1000000000000 $
#20
1!
1.
0B
b1011 "
b1011 1
1C
1(
1'
0-
1=
0>
b100000000000 #
b100000000000 $
#25
b1010 "
b1010 1
0(
1<
0=
b10000000000 #
b10000000000 $
#30
b1001 "
b1001 1
1(
0'
1;
0<
b1000000000 #
b1000000000 $
#35
b1000 "
b1000 1
0(
1:
0;
b100000000 #
b100000000 $
#40
1B
1!
1/
b111 "
b111 1
0C
1*
1)
0.
19
0:
b10000000 #
b10000000 $
#45
b110 "
b110 1
0*
18
09
b1000000 #
b1000000 $
#50
b101 "
b101 1
1*
0)
17
08
b100000 #
b100000 $
#55
b100 "
b100 1
0*
16
07
b10000 #
b10000 $
#60
10
1!
b11 "
b11 1
0B
1,
1+
0/
15
06
b1000 #
b1000 $
#65
b10 "
b10 1
0,
14
05
b100 #
b100 $
#70
b1 "
b1 1
1,
0+
13
04
b10 #
b10 $
#75
b0 "
b0 1
0,
12
03
b1 #
b1 $
#80
